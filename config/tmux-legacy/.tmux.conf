# config file for TMUX 3.2+

# ==============================================================================
# options
# ==============================================================================

## always use zsh :)
#set -g default-shell /bin/zsh
#set -g default-command "zsh"

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# true color support
set -g default-terminal "tmux-256color" # use "${TERM}" for any terminal.
set-option -a terminal-features "xterm*:RGB,alacritty*:RGB,tmux*:RGB"

# to enable apply to any terminal use: 
# set-option -a terminal-features "$TERM:RGB"

# true color support for older tmux versions (i.e., use Tc i.s.o. RGB):
set-option -sa terminal-overrides ",xterm*:Tc,alacritty*:Tc,tmux*:Tc"

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on
## act like gnu screen

set-option -g status-position top

## set 1 as default first window/pane number
set -g base-index 1
setw -g pane-base-index 1

## no more bell messages
set -g bell-action any
set -g visual-bell off
set -g visual-silence off
#
## activity
set -g monitor-activity on
set -g visual-activity off

#set -sg repeat-time 600                   # increase repeat timeout
set -g  mouse on

## tmux session name
set -g allow-rename on # Allow programs in the pane to change the window name using \ek...\e\\
set -g set-titles on
#set -g set-titles-string '[#H:#S] #W #T' # session name, active program, pane title

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# ------------------------------------------------------------------------------
# keybindings
# ------------------------------------------------------------------------------

## force a reload of the config file
bind r source-file ~/.config/tmux/tmux.conf\; display-message "Config reloaded..."

## for nested tmux sessions, with prefix 'C-Space C-s'
set -g prefix C-Space
bind C-s send-prefix

# Additional prefix
set -g prefix2 C-b
bind C-b send-prefix

## copy mode stuff
bind v copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection tmux-yank

# don't quit copy mode after mouse drag
bind -T copy-mode MouseDragEnd1Pane send -X copy-selection -x
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection -x
bind -T copy-mode-vi DoubleClick1Pane send-keys -X cancel

## session navigation
bind s   choose-session -F 'session #{session_name} #{?session_attached,(attached),          } : #{session_windows} windows (#{window_name}#{pane_title})' \; refresh-client -S
bind n   switch-client -n \; refresh-client -S
bind p   switch-client -p \; refresh-client -S

## window/pane navigation
bind k select-pane -U\; refresh-client -S
bind j select-pane -D\; refresh-client -S
bind l select-pane -R\; refresh-client -S
bind h select-pane -L\; refresh-client -S
bind -r C-k select-pane -U\; refresh-client -S
bind -r C-j select-pane -D\; refresh-client -S
bind -r C-l select-pane -R\; refresh-client -S
bind -r C-h select-pane -L\; refresh-client -S

# window navigation
bind C-Space last-window     \; refresh-client -S
bind -r C-p previous-window
bind -r C-n next-window
bind 0 select-window -t 10  \; refresh-client -S

# window creation/splitting
bind C-[ split-window -h -l 50% -p 50 -c "#{pane_current_path}"
bind C-] split-window -v -l 50% -p 50 -c "#{pane_current_path}"
bind [ split-window -h -l 20% -p 20 -c "#{pane_current_path}"
bind ] split-window -v -l 20% -p 20 -c "#{pane_current_path}"

bind C-c new-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind C \
    run-shell 'tmux set-environment -g PANE_CURRENT_PATH #{pane_current_path}' \; \
    new-session 'cd $(eval "$(tmux showenv -g PANE_CURRENT_PATH)"; echo $PANE_CURRENT_PATH); bash -l'

bind i command-prompt -p 'Insert window at:' 'new-window -c "#{pane_current_path}" -a -t %1; swap-window -t -1'
bind I command-prompt -p 'New window at:' 'new-window -c "#{pane_current_path}" -t %1'

## resize pane
bind -r K resize-pane -U 2
bind -r J resize-pane -D 2
bind -r L resize-pane -R 2
bind -r H resize-pane -L 2
bind    m resize-pane -Z # toggle maximize pane

## window manipulations
bind R command-prompt -p "Rename window:" "rename-window %%"
bind A command-prompt -p "Rename session:" "rename-session %%"
bind M command-prompt -p "Move window to:" "move-window -t %%"

bind x confirm-before -p 'Kill pane (y/N)?' kill-pane

# ------------------------------------------------------------------------------
# Theming: tmux status bars and colors
# ------------------------------------------------------------------------------

# tmux session name
set -g allow-rename on # Allow programs in the pane to change the window name using \ek...\e\\
set -g set-titles on
set -g set-titles-string '[#H:#S] #W #T' # session name, active program, pane title

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

# set bar at the bottom (can also be 'top')
set-option -g status-position top

# used colours
GREY="colour234"
LGREY="colour236"
BLUE="colour4"
BLACK="#000000"
ORANGE="colour172"
GREEN="colour76"
WHITE="colour7"

# status bar formats
WINDOW="#[reverse] #I #W#T #[default]" # this requires powerline-extra-symbols
# WINDOW="[#I #W#T]"
STATUS_LEFT=" #H #S #[fg=$WHITE]| "
STATUS_RIGHT="#{?client_prefix,#[fg=colour214]\ue0b6#[fg=$BLACK]#[bg=$ORANGE],}#(bash -c 'source ~/.bash_tmux; tmuxstatusline;')#{?window_zoomed_flag,üîç,} | %d %b | %H:%M "

set -g window-status-separator ' '
set -g window-status-current-format $WINDOW
set -g window-status-current-format $WINDOW
set -g window-status-format $WINDOW
set -g status-left-length 20
set -g status-left $STATUS_LEFT

set -g status-right-length 40
set -g status-right $STATUS_RIGHT

# pane colors
set -g display-panes-active-colour $ORANGE
set -g display-panes-colour $WHITE

set -g window-style                fg=default,bg=$GREY
set -g window-active-style         fg=default,bg=$BLACK
set -g window-status-style         fg=colour31,bg=$GREY,dim
set -g window-status-last-style    fg=$WHITE,bg=$GREY,dim
set -g window-status-current-style fg=$ORANGE,bg=$GREY,bright
set -g message-command-style       bg=$ORANGE,fg=$GREY,dim
set -g message-style               fg=$GREY,bg=$ORANGE,dim
set -g pane-active-border-style    fg=$LGREY,bg=$GREY
set -g pane-border-style           fg=$LGREY,bg=$GREY
set -g status-style                fg=$WHITE,bg=$GREY,dim
set -g status-left-style           fg=$BLUE,bg=$GREY,bright
set -g status-right-style          fg=$WHITE,bg=$GREY,dim

