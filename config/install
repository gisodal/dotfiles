#!/bin/bash

[ $# -ne 1 ] && echo "Usage: ./install <package name>" 1>&2 && exit 1

if ! command -v stow 1>/dev/null; then
  echo 'Error: GNU Stow is not installed.' >&2
  exit 1
fi

PACKAGE=${1%/}
if [ ! -d $PACKAGE ]; then
  echo "Package $PACKAGE not found" 1>&2
  exit 1
fi

function install-powerups() {
  mkdir -p "$HOME/src"

  cd "$HOME/src"
  wget https://invisible-island.net/archives/lynx/tarballs/lynx2.9.2.tar.gz
  cd lynx2.9.2
  sudo ./configure
  sudo make
  sudo make install
}

function clean-existing-symlinks() {
  local pkg=$1

  # Get conflicts from stow dry run
  stow --simulate --verbose -t "$TARGET" "$pkg" 2>&1 | grep -o "existing target is not owned by stow: .*" | sed 's/existing target is not owned by stow: //' | while read -r target; do
    local full_path="$TARGET/$target"
    if [ -L "$full_path" ]; then
      echo "Removing existing symlink: $full_path"
      rm "$full_path"
    elif [ -e "$full_path" ]; then
      echo "Warning: $full_path exists and is not a symlink. Manual action required."
    fi
  done
}

function install-stow() {
  local TARGET=$HOME
  local SOURCE=$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)
  local PACKAGES=$1

  # determine run arguments
  case $PACKAGE in
  "local")
    OPT="--no-folding"
    ;;
  "media")
    OPT="--no-folding"
    SUDO=sudo
    TARGET="/"
    ;;
  *)
    :
    ;;
  esac

  echo "Install $PACKAGE"

  # modify ownership if necessary
  if [[ -n $SUDO ]]; then
    sudo chown -R root:root $PACKAGE
  fi

  clean-existing-symlinks $PACKAGE

  # install the pacakge
  $SUDO stow $OPT -v -t "$TARGET" "$PACKAGE"

  if [ $? -ne 0 ]; then
    exit 1
  fi
}

# set defaults
XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}

# setup some directories
mkdir -p "$XDG_CONFIG_HOME"
mkdir -p "$HOME/.local/bin"

install-stow $PACKAGE
